@page "/"
@rendermode InteractiveServer
@inject HttpClient Http

<PageTitle>Images</PageTitle>

<h1>Image Gallery</h1>

@* <div class="image-grid">
    @for (int i = 0; i < 12; i++)
    {
        <img 
            src="images/placeholder.jpg" 
            class="grid-image" 
            @onclick="() => ShowModal(i)" 
            alt="Gallery image" />
    }
</div>

@if (showModal)
{
    <div class="modal-backdrop" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation>
            <img src="images/placeholder.jpg" class="modal-image" alt="Large view" />
        </div>
    </div>
} *@

@if (isLoading)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else if (imageIds?.Any() == true)
{
    <div class="image-grid">
        @foreach (var id in imageIds)
        {
            <img src="http://192.168.50.226:5000/images/@id"
                 class="grid-image"
                 @onclick="() => ShowModal(id)"
                 alt="Gallery image" />
        }
    </div>
}
else
{
    <p>No images found.</p>
}

@if (showModal)
{
    <div class="modal-backdrop" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation>
            <img src="http://192.168.50.226:5000/images/@selectedId" class="modal-image" alt="Large view" />
        </div>
    </div>
}

@code {
    private bool isLoading = true;
    private bool showModal = false;
    private string? selectedId;
    private List<string>? imageIds;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        try
        {
            imageIds = await Http.GetFromJsonAsync<List<string>>("http://192.168.50.226:5000/images/list");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowModal(string id)
    {
        selectedId = id;
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
    }
}
