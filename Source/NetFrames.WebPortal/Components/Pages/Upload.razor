@page "/upload"
@using System.Net.Http.Headers
@rendermode InteractiveServer
@inject ApiConfig ApiConfig
@inject HttpClient Http

<h3>Upload an Image</h3>
<InputFile OnChange="OnInputFileChange" />
<button class="btn btn-primary" @onclick="UploadImage" disabled="@(!isFileSelected)">Upload</button>

@if (!string.IsNullOrEmpty(status))
{
    <p>@status</p>
}

@code {
    private string? message;
    private bool isFileSelected => selectedFile != null && fileData != null;
    private IBrowserFile? selectedFile;
    private MemoryStream? fileData;
    private string? status;

    private async Task CallHelloApi()
    {
        message = await Http.GetStringAsync($"{ApiConfig.BaseUrl}/hello");
    }

    private async void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        status = null;

        // Immediately read the stream into memory
        fileData = new MemoryStream();
        await selectedFile.OpenReadStream(maxAllowedSize: 1024 * 1024).CopyToAsync(fileData);
        fileData.Position = 0;
    }

    private async Task UploadImage()
    {
        if (selectedFile == null || fileData == null)
        {
            status = "No file selected.";
            return;
        }

        if (!selectedFile.ContentType.StartsWith("image/"))
        {
            status = "Please select a valid image file.";
            return;
        }

        using var content = new MultipartFormDataContent();
        var streamContent = new StreamContent(fileData);
        streamContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(selectedFile.ContentType);

        content.Add(streamContent, "image", selectedFile.Name);

        try
        {
            var response = await Http.PostAsync($"{ApiConfig.BaseUrl}/images/upload", content);
            if (response.IsSuccessStatusCode)
                status = "Upload successful!";
            else
                status = $"Upload failed: {await response.Content.ReadAsStringAsync()}";
        }
        catch (Exception ex)
        {
            status = $"Error: {ex.Message}";
        }
    }
}